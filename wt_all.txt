// 1a. which accepts a string as input and swap the case of each character. 
// Input: The Quick Brown Fox, Output: tHEqUICKbROWNfOX
const readline = require('readline')
var RL = readline.createInterface(process.stdin, process.stdout)
RL.question('Enter Text:  ', function(name) {
    let y = ""
    for (let i = 0; i < name.length; i++) {
        var curr=name[i]
        if (curr==" ") y+=''
        else if (curr==curr.toUpperCase()) y+=curr.toLowerCase()
        else y+=curr.toUpperCase()
    }
    console.log("Output is : " + y)
    RL.close()
})
----------
// 1b. write a js program to find the most frequent element of an array
var list = [1, 4, 7, 8, 7, 4, 1, 5, 2, 1]
var max = 0, item = list[0]
for (var i = 0; i < list.length; i++) {
    var c = 0
    for (var j = 0; j < list.length; j++)
        if (list[i] == list[j]) c++
    if (c > max) {
        max = c
        item = list[i]
    }
}
console.log(item + " (" + max + " times )") // 1 ( 3 times )
----------
// 1c. write a js program to remove duplicates from an array
var list = [1, 2, 2, 4, 5, 4, 7, 8, 7, 3, 6], unq = []
for (var l = 0; l < list.length; l++)
    if (unq.indexOf(list[l]) == -1) unq.push(list[l])
console.log("Unique List: ", unq) // Unique List:  [1, 2, 4, 5, 7, 8, 3, 6]
----------
// 1d. write a js program to perform binary search
var list = [11, 15, 23, 24, 36, 58, 62]
var binarySearch = function (list, l, r, x) {
    while (l <= r) {
        var mid = Math.floor((l + r) / 2)
        if (list[mid] == x) return "Found at index: " + mid
        else if (list[mid] < x) l = mid + 1
        else r = mid - 1
    }
    return "Not Found"
}
console.log(binarySearch(list, 0, list.length - 1, 58)) // Found at index:  5
----------
// 1e. Write a JavaScript program to list the properties of a JavaScript object.
let list = { name: 'Jack', age: 25, college: 'KMIT', year: 3 }
console.log(Object.keys(list)) // [ 'name', 'age', 'college', 'year' ]
----------
// 1f. Write a JavaScript function to check whether an object contains given property.
let object = { name: 'Jack', age: 25, college: 'KMIT', year: 3 }
console.log(object.hasOwnProperty('name')) // true
console.log('age' in object) // true
console.log(object.college) // KMIT
console.log(object.gpa) // undefined
----------
// 1g. Write a JavaScript program to sort a list of elements using Quick sort
var arr = [5, 2, 4, 1, 3, 7, 6, 8]
var quickSort = function (arr) {
    if (arr.length <= 1) return arr
    var pivot = arr[0], left = [], right = []
    for (var i = 1; i < arr.length; i++) {
        if (arr[i] < pivot) left.push(arr[i])
        else right.push(arr[i])
    }
    return quickSort(left).concat(pivot, quickSort(right))
}
console.log("Sorted array: ", quickSort(arr));
// Sorted array:  [ 1, 2, 3, 4, 5, 6, 7, 8 ]
----------
// 1h. Write a JavaScript program to implement Bubble Sort.
var arr = [3, 0, 2, 5, -1, 4, 1], n = arr.length
for (var i = 0; i < n - 1; i++)
    for (var j = 0; j < n - i - 1; j++)
        if (arr[j] > arr[j + 1]) {
            var temp = arr[j]
            arr[j] = arr[j + 1]
            arr[j + 1] = temp
        }
console.log("Sorted array: ", arr);
// Sorted array:  [ -1, 0, 1, 2, 3, 4, 5 ]
----------
<!-- 1i. to read from a JSON object and display the data in a table (HTML page) -->
s1.json:
{ "student": [
        { "name": "Bhavana", "age": 20, "college": "KMIT", "year": 3 },
        { "name": "Ram", "age": 21, "college": "JNTU", "year": 4 },
        { "name": "John", "age": 26, "college": "KMEC", "year": 1 }
]}
index.html:
<html>
    <head>
        <title>Convert JSON Data to HTML Table</title>
        <style>table,td,th {border: solid 2px #DDD;}</style>
    </head>
    <body>
        <input type="button" onclick="CreateTableFromJSON()" value="Create Table From JSON" />
        <p id="showData"></p>
    </body>
    <script>
        function CreateTableFromJSON() {
            fetch("s1.json").then(response => response.json()).then(data => {
                var col = []
                for (var i = 0; i < data.student.length; i++)
                    for (var key in data.student[i])
                        if (col.indexOf(key) === -1) col.push(key)
                console.log(col)
                var table = document.createElement("table")
                var tr = table.insertRow(-1)
                for (var i = 0; i < col.length; i++) {
                    var th = document.createElement("th")
                    th.innerHTML = col[i]
                    tr.appendChild(th)
                }
                for (var i = 0; i < data.student.length; i++) {
                    tr = table.insertRow(-1)
                    for (var j = 0; j < col.length; j++) {
                        var tabCell = tr.insertCell(-1)
                        tabCell.innerHTML = data.student[i][col[j]]
                    }
                }
                var divContainer = document.getElementById("showData")
                divContainer.innerHTML = ""
                divContainer.appendChild(table)
            })
        }
    </script>
</html>
----------
<!-- 1j. Create a JS application that accepts the student's roll number, name, and marks and, when the form has been
submitted, displays the student's name, roll number, and marks in a tabular format along with their GPA ( like a marks
sheet) -->
<html>
    <head>
        <title>Doc</title>
        <style>
            table, th, td {
                border: 1px solid black;
                border-collapse: collapse;
            }
        </style>
        <script>
            function myfun() {
                document.getElementById('output').innerHTML=`
                    <div id="details">
                        <h4>Student details</h4>
                        <table class="table-bordered table-primary">
                            <tr><td>name</td>
                                <td>${document.getElementById('name').value}</td></tr>
                            <tr><td>roll no</td>
                                <td>${document.getElementById('rollno').value}</td></tr>
                            <tr><td>${document.getElementById('sub1').value}</td>
                                <td>${document.getElementById('marks1').value}</td></tr>
                            <tr><td>${document.getElementById('sub2').value}</td>
                                <td>${document.getElementById('marks2').value}</td></tr>
                            <tr><td>${document.getElementById('sub3').value}</td>
                                <td>${document.getElementById('marks3').value}</td></tr>
                            <tr><td>CGPA</td>
                                <td>${((parseInt(document.getElementById('marks1').value) + 
                                        parseInt(document.getElementById('marks2').value) + 
                                        parseInt(document.getElementById('marks3').value))/30).toFixed(2)}</td></tr>
                        </table>
                    </div>
                `;
            }
        </script>
    </head>
    <body>
        <div id="form">
            <h4>Enter student details:</h4>
            <form id="form">
                <label>Student name:</label>
                <input type="text" id="name"><br>
                <label>Roll number:&nbsp; </label>
                <input type="text" id="rollno"><br>
                <label>subject1 Marks:</label>
                <input type="text" id="sub1" placeholder="sub1">
                <input type="number" id="marks1"><br>
                <label>subject2 Marks:</label>
                <input type="text" id="sub2" placeholder="sub2">
                <input type="number" id="marks2"><br>
                <label>subject3 Marks:</label>
                <input type="text" id="sub3" placeholder="sub3">
                <input type="number" id="marks3"><br>
                <input type="button" onclick="myfun()" value="Submit">
        </div>
        <div id="output"></div>
    </body>
</html>
----------
// 3. Write a Node JS program that accepts a port from the user and runs a node server at that port
var http = require('http')
var server = http.createServer(function (req, res) {
    if (req.url == '/') {
        res.writeHead(200, { 'Content-Type': 'text/html' })
        res.write('Home Page')
        res.end()
    } else if (req.url == "/student") {
        res.writeHead(200, { 'Content-Type': 'text/html' })
        res.write('Student Page')
        res.end()
    } else res.end('Invalid Request!')
})
server.listen(4000)
console.log('Server is running at port 4000');
----------
// 4. Write a NodeJS program to read from a file and display the content on screen "file.txt"
// Content in file.txt: Hello World
try {
    console.log(require('fs').readFileSync('file.txt', 'utf8'))
} catch (e) { console.log('Error:', e.stack) }
----------
// 5. Create a NodeJS programme that allows users to submit text and a file name, 
// and if the file already exists, appends the text to the file. 
// If not, make a fresh file and include the text in it.
require('fs').appendFile('file.txt', `second line \r\n`, function (err) {
    err ? console.log(err) : console.log('Appended successfully')
});
----------
// 6. Create a student database in MongoDB with all the details of students of a class
> show dbs
> use wt
    switched to db wt
> db.wt.insert({name:"abc", rollno:1, marks:100})
    WriteResult({ "nInserted" : 1 })
> db.wt.insert({name:"pqr", rollno:2, marks:80})
    WriteResult({ "nInserted" : 1 })
> db.wt.find()
    { "_id" : ObjectId("63ab12c019b23e284407ffe2"), "name" : "abc", "rollno" : 1, "marks" : 100 }
    { "_id" : ObjectId("63ab12c719b23e284407ffe4"), "name" : "pqr", "rollno" : 2, "marks" : 80 }